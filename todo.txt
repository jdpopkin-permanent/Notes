TODO

Need comments on Notes. Need Votes (on songs, notes, and comments of all kinds).
Need sessions controller etc.

Note: if we're going to have a BFS for collaborations, we need to have
complicated relations between songs and artists (a link table).

Q: is there a way to avoid duplicating extremely similar models? For example:
vote model on songs, comments, notes. SEE RAILS GUIDES - POLYMORPHIC ASSOCIATIONS.

Fill out db:seeds.

Ask how partial Backbone works: you only have one application.js, so how can you
have meaningfully different javascript behavior on different pages of your site?
Maybe it's trivial but thus far our Backbone stuff have mostly involved a single
HTML page with Backbone doing everything.

Backbone with multiple routers? Do we simply initialize a different router on
each page?

Find a way to rate songs (either by votes or ideally by recent votes).

Should the root use Backbone? Currently it only needs to show and hide the login
form.

Would it be possible to have a dropdown list of artists load dynamically as you type?

We should be able to deep link to particular albums, artists, and songs, so that
stuff should NOT be done via Backbone.

http://jquery.10927.n7.nabble.com/jQuery-specific-selected-highlighted-text-td87729.html

Insert a span with an "exegize_button" id immediately after the selection. Give
it absolute positioning.

Short term stuff: Add some capacity to edit and update song, artist, and album
pages.

Add notes. Dynamically get the y coordinate of the bottom of the selection area.
X coordinate will not be dynamic - set a manual width for the div containing the
lyrics, and set the X coordinate of the note object to be 30px to the right of
that or whatever.

To get the offset correct, you need to calculate the total length of all notes on
the current song which start earlier in the song. This would need to be updated upon
note deletion. Or perhaps instead: the offset from the end of the previous note?
Solution may involve use of nextSibling and previousSibling in the anchorNode.
